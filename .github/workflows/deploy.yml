# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    if: startsWith(github.event.head_commit.message, 'deploy')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: 发布
        id: create-release
        run: |
            # Get the latest commit message of the deployment workflow run
            commit_message=$(git log -1 --pretty=format:%s $GITHUB_SHA)
            
            # Check if the commit message starts with "deploy"
            if [[ "$commit_message" == deploy* ]]; then
            # Extract the version number from the commit message (assuming it's in the format X.X.X)
            version=$(echo "$commit_message" | grep -oP '\d+\.\d+\.\d+')
            
            # Create a GitHub Release using the GitHub API
            release_url=$(curl -s -X POST -H "Authorization: token 123" \
               -d "{\"tag_name\": \"$version\", \"name\": \"$version\", \"draft\": false}" \
               "https://api.github.com/repos/$GITHUB_REPOSITORY/releases" | jq -r '.url')
            
            echo "::set-output name=release_url::$release_url"
            fi

            - name: Output Release URL
              run: |
                release_url=${{ steps.create-release.outputs.release_url }}
                if [ -n "$release_url" ]; then
                  echo "发布: $release_url"
                else
                  echo "Commit message does not start with 'deploy'. Skipping release creation."
                fi
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: 提取版本号
#        id: extract-version
#        run: |
#          # Get the commit message of the latest commit
#          commit_message=$(git log -1 --pretty=format:%s)
#
#          # Check if the commit message starts with "deploy"
#          if [[ "$commit_message" == deploy* ]]; then
#          # Use a regular expression to extract the version number (assuming it's in the format X.X.X)
#          version=$(echo "$commit_message" | grep -oP '\d+\.\d+\.\d+')
#          echo "::set-output name=version::$version"
#          fi
#      - name: Use Extracted Version
#        run: |
#          extracted_version=${{ steps.extract-version.outputs.version }}
#          if [ -n "$extracted_version" ]; then
#            echo "发布版本: $extracted_version"
#            # Now you can use $extracted_version for further processing (e.g., creating a tag)
#          else
#            echo "Commit message does not start with 'deploy'. Skipping."
#          fi
#      - name: Set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#      # 设置 Maven Settings
#      - name: maven-settings-xml-action
#        uses: whelk-io/maven-settings-xml-action@v20
#        with:
#          profiles: >
#            [
#              {
#                "id": "ci",
#                "properties": {
#                  "altSnapshotDeploymentRepository": "${{ secrets.ALT_SNAPSHOT_DEPLOYMENT_REPOSITORY }}",
#                  "altReleaseDeploymentRepository": "${{ secrets.ALT_RELEASE_DEPLOYMENT_REPOSITORY }}",
#                  "gpg.keyname": "${{ steps.gpg-key-id.outputs.gpgKeyId }}",
#                  "gpg.passphrase": "${{ secrets.GPG_PASSPHRASE }}"
#                }
#              }
#            ]
#          servers: >
#            [
#              {
#                "id": "ossrh",
#                "username": "${{ secrets.MVN_SERVER_USER }}",
#                "password": "${{ secrets.MVN_SERVER_PASSWORD }}"
#              }
#            ]
#          repositories: >
#            [
#              {
#                "id": "ossrh-releases",
#                "name": "ossrh releases",
#                "url": "https://s01.oss.sonatype.org/content/repositories/releases/",
#                "releases": {
#                  "enabled": "true"
#                },
#                "snapshots": {
#                  "enabled": "false"
#                }
#              },
#              {
#                "id": "ossrh-snapshots",
#                "name": "ossrh snapshots",
#                "url": "https://s01.oss.sonatype.org/content/repositories/snapshots/",
#                "releases": {
#                  "enabled": "false"
#                },
#                "snapshots": {
#                  "enabled": "true"
#                }
#              }
#            ]
#      - name: Cat Setting.xml
#        run: cat /home/runner/.m2/settings.xml
#      - name: Deploy with Maven
#        run: mvn -B deploy -Pci --file pom.xml
#